services:
  frontend:
    container_name: frontend
    image: frontend
    build: ./requirements/frontend
    ports:
      - 443:443
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - public-transcendence-network
      - private-transcendence-network
    volumes:
      - backend_avatar:/var/www/ft_transcendence/static/avatar/custom

  backend:
    container_name: backend
    image: backend
    build: ./requirements/backend
    expose:
      - '3000'
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - private-transcendence-network
    volumes:
      - backend_db:/app/data
      - ./requirements/blockchain/conf/output:/app/data/blockchain
      - backend_avatar:/app/avatar
    secrets:
      - private_key
    
  blockchain:
    container_name: blockchain
    image: blockchain
    build: ./requirements/blockchain
    env_file:
      - .env
    restart: "no"
    volumes:
      - ./requirements/blockchain:/app
      - ./requirements/blockchain/conf/output:/output
    secrets:
      - private_key

volumes:
  backend_db:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH}/backend_db
      o: bind
  backend_avatar:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH}/avatar
      o: bind

networks:
  public-transcendence-network:
    name: public-transcendence-network
    driver: bridge
  private-transcendence-network:
    name: private-transcendence-network
    driver: bridge

secrets:
  private_key:
    file: ../secrets/private_key.txt
