name: Docker Compose CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4

      - name: 🧪 Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: 🛠️ Set up Docker Buildx (for caching & multi-platform builds)
        uses: docker/setup-buildx-action@v3

      - name: 🎯 Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: 📝 Create .env file from secrets
        run: |
          echo "DATA_PATH=${{ secrets.DATA_PATH }}" >> srcs/.env
          echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" >> srcs/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> srcs/.env
          echo "JWT_SIGN_SECRET=${{ secrets.JWT_SIGN_SECRET }}" >> srcs/.env
          echo "COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}" >> srcs/.env
          echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> srcs/.env

      - name: 🐳 Start Docker Services (with cache)
        run: |
          make

      - name: 🏗️ Run Build and Test Script
        run: |
          chmod +x docs/scripts/build_dockerfile_test.sh
          ./docs/scripts/build_dockerfile_test.sh

      - name: 📜 Show Docker Logs (if failure)
        if: failure()
        run: |
          cd srcs
          docker compose logs

      - name: 🛑 Stop and Clean Up
        run: |
          cd srcs
          docker compose down
      
      - name: 🧹 Remove temp .env
        run: |
          rm -f srcs/.env
